[{"D:\\REACR NATIVE\\weatherapp\\src\\index.js":"1","D:\\REACR NATIVE\\weatherapp\\src\\App.js":"2","D:\\REACR NATIVE\\weatherapp\\src\\reportWebVitals.js":"3","D:\\REACR NATIVE\\weatherapp\\src\\usePosition.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":4455,"mtime":1610646075143,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1058,"mtime":1610447985359,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1nk6z18",{"filePath":"13","messages":"14","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"D:\\REACR NATIVE\\weatherapp\\src\\index.js",[],["21","22"],"D:\\REACR NATIVE\\weatherapp\\src\\App.js",["23","24","25","26","27","28","29","30"],"\nimport \"./App.css\";\nimport './fontawesome-free-5.15.1-web/css/fontawesome.css'\nimport \"./fontawesome-free-5.15.1-web/css/brands.css\"\nimport \"./fontawesome-free-5.15.1-web/css/solid.css\"\n// import {useEffect} from 'react'\nimport{usePosition} from './usePosition'\n\n\nimport axios from 'axios'\n\nimport {useState,useEffect} from 'react'\n\nfunction App() {\n  // const {position,error} = usePosition();\n  // console.log('position : '+usePosition())\n  // useEffect(() => {\n  //   // console\n  // }, []);\n\n\n  const [forecase,setForecase]=useState([])\n  const [error,setError]=useState(null)\n  const [weather,setWeather]=useState({})\n  const [date,setDate] = useState(null);\n  const time = new Date(1610635190 * 1000);\n\n  const onChange=({coords})=>{\n      \n \n      // console.log(position.latitude!=coords.latitude)\n      \n          return axios.get(`/data/2.5/onecall?lat=${coords.latitude}&lon=${coords.longitude}&appid=3e3f2591f46e6acfd136e70b83e46680&units=metric`)\n          .then(function(rep){\n            setWeather(rep.data.current)\n            setForecase(rep.data.daily)\n            // setDate(new Date(rep. * 1000))\n            // console.log(\"rep \",rep.data.weather)\n          }).catch(function (error) {\n           // handle error\n           console.log(error);\n         })\n        \n   \n  }\n  const onError=(error)=>{\n      console.log(error)\n      setError(error.message)\n  }\n\n  useEffect(()=>{\n      const geo=navigator.geolocation\n      // console.log(Date(1610635190 * 1000).getFullYear())\n      \n      // console.log(time.getDate())\n      console.log(timeConverter(weather.dt))\n      if(!geo){\n          setError('geolocation is not supported')\n          return;\n      }\n     let pos= geo.getCurrentPosition(onChange,onError)\n \n     \n     return pos;\n  })\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"bg-img\">\n\n      </div>\n      <div className=\"cart\">\n        <div className=\"main\">\n          <div className=\"location\">\n            <div className=\"location-name\">\n              Buch<span>arest,RO</span>\n              <div>{\n                  \n                  timeConverter(weather.dt).year              \n              }</div>\n            </div>\n            <div className=\"location-info\">\n              <i class=\"fas fa-map-marker-alt\"></i>\n              <span>12:33</span>\n            </div>\n          </div>\n        </div>\n      <div className=\"forecast\">\n       \n        <div className=\"today\">\n          <div>\n          <div className=\"temperature\">\n          {weather.temp}°\n              <span className=\"day\">Monday</span>\n          </div>\n          </div>\n       \n            <i class=\"fas fa-cloud-showers-heavy\"></i>\n        </div>\n       \n    \n        <div className=\"forecast-day\">\n        <span className=\"day\">Mon</span>\n            <div className=\"temperature\">\n              82°\n            </div>\n            <i class=\"fas fa-cloud-showers-heavy\"></i>\n        </div>\n\n        <div className=\"forecast-day\">\n        <span className=\"day\">Mon</span>\n            <div className=\"temperature\">\n              82°\n            </div>\n            <i class=\"fas fa-cloud-showers-heavy\"></i>\n        </div>\n\n        <div className=\"forecast-day\">\n        <span className=\"day\">Mon</span>\n            <div className=\"temperature\">\n              82°\n            </div>\n            <i class=\"fas fa-cloud-showers-heavy\"></i>\n        </div>\n\n        <div className=\"forecast-day\">\n        <span className=\"day\">Mon</span>\n            <div className=\"temperature\">\n              82°\n            </div>\n            <i class=\"fas fa-cloud-showers-heavy\"></i>\n        </div>\n\n        <div className=\"forecast-day\">\n        <span className=\"day\">Mon</span>\n            <div className=\"temperature\">\n              82°\n            </div>\n            <i class=\"fas fa-cloud-showers-heavy\"></i>\n        </div>\n\n        <div className=\"forecast-day\">\n        <span className=\"day\">Mon</span>\n            <div className=\"temperature\">\n              82°\n            </div>\n            <i class=\"fas fa-cloud-showers-heavy\"></i>\n        </div>\n      \n  \n      </div>\n      </div>\n    </div>\n  );\n}\n\nfunction timeConverter(UNIX_timestamp){\n  var date = new Date(UNIX_timestamp * 1000);\n  var year = date.getFullYear();\n  var month = date.getMonth();\n  var day = date.getDate();\n  var hour = date.getHours();\n  var min = date.getMinutes();\n  var sec = date.getSeconds();\n  return {year,day,month,hour,min};\n}\n\nexport default App;\n","D:\\REACR NATIVE\\weatherapp\\src\\reportWebVitals.js",[],"D:\\REACR NATIVE\\weatherapp\\src\\usePosition.js",["31","32","33"],"import {useState,useEffect} from 'react'\r\n\r\nexport const usePosition=()=>{\r\n    const [position,setPosition]=useState({})\r\n    const [error,setError]=useState(null)\r\n\r\n    const onChange=({coords})=>{\r\n        console.log('coords : '+coords.latitude)\r\n        setPosition({coords})\r\n    }\r\n    const onError=(error)=>{\r\n        console.log(error)\r\n        setError(error.message)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const geo=navigator.geolocation.Geolocation\r\n\r\n        if(!geo){\r\n            setError('geolocation is not supported')\r\n            return;\r\n        }\r\n        console.log('log g '+navigator.geolocation,geo)\r\n        let watcher = geo.watchPosition(function (cord){\r\n            console.log('hello'+cord)\r\n        });\r\n    //    const pos= geo.getCurrentPosition(onChange,onError)\r\n       console.log(geo.Geolocation,geo.getCurrentPosition(function (cord){\r\n           console.log(cord)\r\n       }))\r\n\r\n       return () => geo.clearWatch(watcher);\r\n    })\r\n        // console.log('positin ::' +position)\r\n\r\n    return {...position,error}\r\n}",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":7,"column":8,"nodeType":"40","messageId":"41","endLine":7,"endColumn":19},{"ruleId":"38","severity":1,"message":"42","line":22,"column":10,"nodeType":"40","messageId":"41","endLine":22,"endColumn":18},{"ruleId":"38","severity":1,"message":"43","line":23,"column":10,"nodeType":"40","messageId":"41","endLine":23,"endColumn":15},{"ruleId":"38","severity":1,"message":"44","line":25,"column":10,"nodeType":"40","messageId":"41","endLine":25,"endColumn":14},{"ruleId":"38","severity":1,"message":"45","line":25,"column":15,"nodeType":"40","messageId":"41","endLine":25,"endColumn":22},{"ruleId":"38","severity":1,"message":"46","line":26,"column":9,"nodeType":"40","messageId":"41","endLine":26,"endColumn":13},{"ruleId":"47","severity":1,"message":"48","line":51,"column":3,"nodeType":"40","endLine":51,"endColumn":12,"suggestions":"49"},{"ruleId":"38","severity":1,"message":"50","line":165,"column":7,"nodeType":"40","messageId":"41","endLine":165,"endColumn":10},{"ruleId":"38","severity":1,"message":"51","line":7,"column":11,"nodeType":"40","messageId":"41","endLine":7,"endColumn":19},{"ruleId":"38","severity":1,"message":"52","line":11,"column":11,"nodeType":"40","messageId":"41","endLine":11,"endColumn":18},{"ruleId":"47","severity":1,"message":"53","line":16,"column":5,"nodeType":"40","endLine":16,"endColumn":14,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'usePosition' is defined but never used.","Identifier","unusedVar","'forecase' is assigned a value but never used.","'error' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'time' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setError'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [weather.dt] as a second argument to the useEffect Hook.",["57"],"'sec' is assigned a value but never used.","'onChange' is assigned a value but never used.","'onError' is assigned a value but never used.","React Hook useEffect contains a call to 'setError'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Add dependencies array: [weather.dt]",{"range":"63","text":"64"},"Add dependencies array: []",{"range":"65","text":"66"},[1764,1764],", [weather.dt]",[972,972],", []"]