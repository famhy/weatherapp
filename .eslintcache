[{"D:\\REACR NATIVE\\weatherapp\\src\\index.js":"1","D:\\REACR NATIVE\\weatherapp\\src\\App.js":"2","D:\\REACR NATIVE\\weatherapp\\src\\reportWebVitals.js":"3","D:\\REACR NATIVE\\weatherapp\\src\\usePosition.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":4160,"mtime":1610636954517,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1058,"mtime":1610447985359,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1nk6z18",{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"D:\\REACR NATIVE\\weatherapp\\src\\index.js",[],["20","21"],"D:\\REACR NATIVE\\weatherapp\\src\\App.js",["22","23","24","25"],"D:\\REACR NATIVE\\weatherapp\\src\\reportWebVitals.js",[],"D:\\REACR NATIVE\\weatherapp\\src\\usePosition.js",["26","27","28"],"import {useState,useEffect} from 'react'\r\n\r\nexport const usePosition=()=>{\r\n    const [position,setPosition]=useState({})\r\n    const [error,setError]=useState(null)\r\n\r\n    const onChange=({coords})=>{\r\n        console.log('coords : '+coords.latitude)\r\n        setPosition({coords})\r\n    }\r\n    const onError=(error)=>{\r\n        console.log(error)\r\n        setError(error.message)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const geo=navigator.geolocation.Geolocation\r\n\r\n        if(!geo){\r\n            setError('geolocation is not supported')\r\n            return;\r\n        }\r\n        console.log('log g '+navigator.geolocation,geo)\r\n        let watcher = geo.watchPosition(function (cord){\r\n            console.log('hello'+cord)\r\n        });\r\n    //    const pos= geo.getCurrentPosition(onChange,onError)\r\n       console.log(geo.Geolocation,geo.getCurrentPosition(function (cord){\r\n           console.log(cord)\r\n       }))\r\n\r\n       return () => geo.clearWatch(watcher);\r\n    })\r\n        // console.log('positin ::' +position)\r\n\r\n    return {...position,error}\r\n}",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":7,"column":8,"nodeType":"35","messageId":"36","endLine":7,"endColumn":19},{"ruleId":"33","severity":1,"message":"37","line":22,"column":10,"nodeType":"35","messageId":"36","endLine":22,"endColumn":18},{"ruleId":"33","severity":1,"message":"38","line":23,"column":10,"nodeType":"35","messageId":"36","endLine":23,"endColumn":15},{"ruleId":"39","severity":1,"message":"40","line":51,"column":3,"nodeType":"35","endLine":51,"endColumn":12,"suggestions":"41"},{"ruleId":"33","severity":1,"message":"42","line":7,"column":11,"nodeType":"35","messageId":"36","endLine":7,"endColumn":19},{"ruleId":"33","severity":1,"message":"43","line":11,"column":11,"nodeType":"35","messageId":"36","endLine":11,"endColumn":18},{"ruleId":"39","severity":1,"message":"40","line":16,"column":5,"nodeType":"35","endLine":16,"endColumn":14,"suggestions":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'usePosition' is defined but never used.","Identifier","unusedVar","'position' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setError'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["47"],"'onChange' is assigned a value but never used.","'onError' is assigned a value but never used.",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},{"desc":"49","fix":"51"},"Add dependencies array: []",{"range":"52","text":"53"},{"range":"54","text":"53"},[1792,1792],", []",[972,972]]